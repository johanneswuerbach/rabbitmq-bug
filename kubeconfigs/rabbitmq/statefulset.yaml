apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: default
spec:
  serviceName: rabbitmq
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      terminationGracePeriodSeconds: 600
      serviceAccountName: rabbitmq
      initContainers:
      - name: copy-rabbitmq-config
        image: busybox
        command:
        - sh
        - -c
        - cp /configmap/* /etc/rabbitmq
        volumeMounts:
        - name: configmap
          mountPath: /configmap
        - name: config
          mountPath: /etc/rabbitmq
      containers:
      - name: rabbitmq
        image: rabbitmq:3.8.5-management-alpine
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                until rabbitmqctl node_health_check; do sleep 1; done; rabbitmqctl set_policy ha-two "." '{"ha-mode":"exactly","ha-params":2,"ha-sync-mode":"automatic"}'; rabbitmq-upgrade post_upgrade
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                rabbitmq-upgrade await_online_quorum_plus_one -t 600; rabbitmq-upgrade await_online_synchronized_mirror -t 600;
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 20
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - rabbitmq-diagnostics -q node_health_check && rabbitmq-diagnostics -q check_port_connectivity
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 20
          successThreshold: 2
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: test
        - name: RABBITMQ_DEFAULT_PASS
          value: test
        - name: RABBITMQ_ERLANG_COOKIE
          value: test
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBITMQ_NODENAME
          value: rabbit@$(POD_NAME).rabbitmq.default.svc.cluster.local
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: K8S_HOSTNAME_SUFFIX
          value: .rabbitmq.default.svc.cluster.local
        - name: K8S_SERVICE_NAME
          value: rabbitmq
        - name: K8S_ADDRESS_TYPE
          value: hostname
        ports:
        - containerPort: 15672
          name: http
        - containerPort: 5672
          name: amqp
        - containerPort: 4369
          name: epmd
        - containerPort: 25672
          name: rabbitmq-dist
        volumeMounts:
        - name: rabbitmq
          mountPath: /var/lib/rabbitmq
        - name: config
          mountPath: /etc/rabbitmq
      volumes:
      - name: config
        emptyDir: {}
      - name: configmap
        configMap:
          name: rabbitmq-config
          items:
          - key: rabbitmq.conf
            path: rabbitmq.conf
          - key: enabled_plugins
            path: enabled_plugins
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq
      labels:
        app: rabbitmq
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
